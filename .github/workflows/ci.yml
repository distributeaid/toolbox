name: ci 
on:
  push: {}
  schedule: 
    - cron:  '0 2 * * *'
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: toolbox
          POSTGRES_PASSWORD: toolbox 
          POSTGRES_DB: toolbox 
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      MIX_ENV: test
      POSTGRES_USER: toolbox
      POSTGRES_PASSWORD: toolbox
      POSTGRES_DB: toolbox
      DB_HOSTNAME_TEST: localhost
      POSTGRES_PORT: 5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: 22.2.6
          elixir-version: 1.10.1
      - uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - run: mix local.rebar --force
      - run: mix local.hex --force
      - run: mix deps.get
      - run: mix test
      - name: Notify error via Slack 
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: toolbox
          status: Tests failed
          color: danger
  package:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Docker image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: pedrogutierrez/toolbox
        tags: latest
    - name: Notify error
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: toolbox
        status: Docker image failed 
        color: danger
  deploy:
    runs-on: ubuntu-latest
    needs: package
    steps: 
    - name: Checkout
      uses: actions/checkout@master
    - name: Deploy
      uses: pedro-gutierrez/elementary-action@v5
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
    - name: Notify error
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: toolbox
        status: Deploy failed 
        color: danger
    - name: Notify success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: toolbox
        status: Succesfully deployed
        color: good