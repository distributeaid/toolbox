version: '3.4'
services:
  db:
    image: "postgres:${DA_POSTGRES_VERSION}"
    container_name: toolbox_db
    volumes:
      - ./${DA_DB_VOLUME_NAME}:/var/lib/postgresql/data
      - ./development/seed-test-group.sh:/seed-test-group.sh
    environment:
      - POSTGRES_USER=${DA_DB_USERNAME}
      - POSTGRES_PASSWORD=${DA_DB_PASSWORD}
      - POSTGRES_DB=${DA_DB_DATABASE}
  dbtest:
    image: "postgres:${DA_POSTGRES_VERSION}"
    container_name: dbtest
    environment:
      - POSTGRES_USER=${DA_DB_USERNAME}
      - POSTGRES_PASSWORD=${DA_DB_PASSWORD}
      - POSTGRES_DB=${DA_DB_DATABASE}
  dbadmin:
    image: "dpage/pgadmin4:4"
    container_name: dbadmin
    ports:
      - "8088:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - db
    restart: unless-stopped
  web:
    build:
      context: .
      dockerfile: web.Dockerfile
      target: build-env
    command: [
      "/app/development/wait-for-it.sh", 
      "db:5432", 
      "--", 
      "/app/development/web-entrypoint.sh"
    ]
    container_name: toolbox_web
    volumes:
      - ./:/app
      - /app/assets/node_modules
    ports:
      - "1312:1312"
    # DB_HOSTNAME value MUST match the name of the db service!
    # DA_DB_HOSTNAME_TEST value MUST match the name of the test db service!
    environment:
      - POSTGRES_USER=${DA_DB_USERNAME}
      - POSTGRES_PASSWORD=${DA_DB_PASSWORD}
      - POSTGRES_DB=${DA_DB_DATABASE}
      - DB_HOSTNAME_DEV=${DA_DB_HOSTNAME_DEV}
      - DB_HOSTNAME_TEST=${DA_DB_HOSTNAME_TEST}
      - DB_PORT=5432
    depends_on:
      - db
      - dbtest
  ui:
    build:
      context: .
      dockerfile: ui.Dockerfile
    container_name: toolbox_ui
    volumes:
      - ./etc/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - web
volumes:
  db:
    name: ${DA_DB_VOLUME_NAME}
    external: ${DA_EXTERNAL_VOLUME_REQUIRED}