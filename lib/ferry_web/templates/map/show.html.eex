<section class="section">
  <div class="section__content">
    <header class="section__header">
      <h1 class="section__title">The Map</h1>
    </header>

    <%= form_for @changeset, map_path(@conn, :show), [method: :get], fn f -> %>
      <%= if @changeset.action do %>
        <div class="alert is-error">
          <p>Oops, something went wrong! Please check the errors below.</p>
        </div>
      <% end %>

      <div class="form-item is-inline">
        <%= label f, :search %>
        <%= text_input f, :search %>
        <%= error_tag f, :search %>
      </div>

      <div class="form-item is-inline">
        <%= label f, :group_filter, "Group(s)" %>
        <%= multiple_select f, :group_filter, @map.group_filter_labels, [multiple: true] %>
      </div>

      <div class="form-item is-text-center">
        <%= submit "Submit", class: "button is-big" %>
      </div>
    <% end %>

    <div id="map" class="map"></div>
  </div>
</section>

<script>
  /* addresses =
   * [
   *   {
   *     geoencoding_uri: ...,
   *     marker_content: ...,
   *   },
   *   ...
   * ]
   */
  var addresses = <%= format_addresses_for_map(@map.results) %>;
  var map = new L.map('map');

  // create the tile layer with correct attribution
  var osmUrl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
  var osmAttrib='Map data &copy; <a href="https://openstreetmap.org" target="blank">OpenStreetMap</a> contributors, <a href="https://openstreetmap.org/copyright" target="blank">CC-BY-SA</a>';
  var osm = new L.TileLayer(osmUrl, {attribution: osmAttrib});

  // draw the map
  map.setView(new L.LatLng(52, 13), 3);
  map.addLayer(osm);

  // geoencode addresses
  var geoencodingRequests = addresses.map(function(address) {
    return fetch(address.geoencoding_uri)
      .then(function(response) {
        return response.json();
      });
  });

  // add markers to the map
  Promise.all(geoencodingRequests)
    .then(function(geoencodingResults) {
      geoencodingResults.forEach(function(result, i) {
        result = result[0];
        var marker = L.marker([result.lat, result.lon])
          .bindPopup(addresses[i].marker_content)
          .addTo(map);
      });
    });
</script>
