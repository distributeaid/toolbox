import Config

# For production, we often load configuration from external
# sources, such as your system environment. For this reason,
# you won't find the :http configuration below, but set inside
# FerryWeb.Endpoint.init/2 when load_from_system_env is
# true. Any dynamic configuration should be done there.
#
# Don't forget to configure the url host to something meaningful,
# Phoenix uses this information when generating URLs.
#
# Finally, we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the mix phx.digest task
# which you typically run after static files are built.
config :ferry, FerryWeb.Endpoint,
  http: [port: {:system, "PORT"}],
  # This is critical for ensuring web-sockets properly authorize.
  url: [host: {:system, "HOSTNAME"}, port: {:system, "PORT"}],
  # cache_static_manifest: "priv/static/cache_manifest.json",
  server: true,
  root: ".",
  version: Application.spec(:phoenix_distillery, :vsn)

# Configure your database
config :ferry, Ferry.Repo,
  adapter: Ecto.Adapters.Postgres,
  username: System.get_env("POSTGRES_USER"),
  password: System.get_env("POSTGRES_PASSWORD"),
  database: System.get_env("POSTGRES_DB"),
  hostname: System.get_env("POSTGRES_HOST"),
  port: System.get_env("POSTGRES_PORT"),
  pool_size: 15

# Generate a new secret: https://hexdocs.pm/phoenix/Mix.Tasks.Phx.Gen.Secret.html#content

config :ferry, FerryWeb.Endpoint, secret_key_base: System.get_env("SECRET_KEY_BASE")

# Twilio Integrations
# ------------------------------------------------------------
# Docs: https://github.com/distributeaid/twilio-integration#overview
# Generate a new secret: Ask Markus (@coderbyheart).

config :ferry, :chat,
  apiKey: {:system, "TWILIO_API_KEY"},
  endpoint: {:system, "TWILIO_ENDPOINT"}

config :arc,
  storage: Arc.Storage.S3,
  bucket: {:system, "AWS_S3_BUCKET"}
